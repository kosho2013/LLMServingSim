Compute_Latency [80.0]
Memory_Latency [0.0]
Network_Latency [25.6]
num_tile 1
num_config 1
------------------------------- config: 0 -------------------------------------
pcu_x[0, 0, 1, 1]
pcu_y[1, 3, 0, 2]
pcu_counter [128, 128, 128, 128]
pcu_sender_vec [[0, 1, 2], [3, 4, 5], [999999], [999999]]
pcu_receiver_vec [[6], [7], [8, 9, 10, 14], [11, 12, 13, 15]]
pcu_SIMD_or_Systolic ["Systolic", "Systolic", "Systolic", "Systolic"]
pcu_M [1, 1, 1, 1]
pcu_K [128, 128, 128, 128]
pcu_N [1, 1, 1, 1]
pmu_x[0, 0, 1, 1, 2, 2, 3, 3]
pmu_y[0, 2, 1, 3, 0, 2, 1, 3]
pmu_counter [128, 128, 128, 128, 128, 128, 128, 128]
pmu_sender_vec [[8], [9], [10], [11], [12], [13], [6, 7], [14, 15]]
pmu_receiver_vec [[0], [1], [2], [3], [4], [5], [999999], [999999]]
num_of_connections 16











------------------------------- config: 0 -------------------------------------
--------  network, mesh --------
num_connection:[1, 0]
inter_link_dict:
(1, 0): []
(1, 1): []
(0, 1): [(0, 0)]
(0, 0): [(0, 1)]
used_link_map:
(1, 0, "to_L", 1, 0, "to_L"): 1
(1, 0, "from_L", 1, 0, "from_L"): 1
(0, 0, "from_L", 0, 0, "from_L"): 2
(1, 0, "E", 1, 1, "W"): 2
(1, 1, "to_L", 1, 1, "to_L"): 2
(0, 0, "S", 1, 0, "N"): 2
all_routers{(1, 0), (1, 1), (0, 0)}
dst_dict:{(1, 0): [3], (0, 0): [2, 3]}
digraph ProgramGraph {
    Node_0[shape="rectangle",label="GeneratorContext(ID_0)"]
    Node_1[shape="rectangle",label="to_router_adapter(ID_1)"]
    Node_2[shape="rectangle",label="ConsumerContext(ID_2)"]
    Node_3[shape="rectangle",label="router_mesh(ID_3)"]
    Node_4[shape="rectangle",label="ConsumerContext(ID_4)"]
    Node_5[shape="rectangle",label="router_mesh(ID_5)"]
    Node_6[shape="rectangle",label="GeneratorContext(ID_6)"]
    Node_7[shape="rectangle",label="GeneratorContext(ID_7)"]
    Node_8[shape="rectangle",label="to_router_adapter(ID_8)"]
    Node_9[shape="rectangle",label="router_mesh(ID_9)"]
    Node_3 -> Node_2 [label="Channel(0)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
    Node_8 -> Node_9 [label="Channel(1)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
    Node_3 -> Node_5 [label="Channel(2)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
    Node_5 -> Node_4 [label="Channel(3)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
    Node_1 -> Node_3 [label="Channel(4)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
    Node_9 -> Node_3 [label="Channel(5)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
    Node_0 -> Node_1 [label="Channel(6)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
    Node_6 -> Node_8 [label="Channel(7)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
    Node_7 -> Node_8 [label="Channel(8)",tooltip="Capacity: None\nLatency: 1\nRespLatency: 1"]
}
finished!!!!!!!!!!!!!!!!!!!!!!! 0, 0
finished!!!!!!!!!!!!!!!!!!!!!!! 1, 0
finished!!!!!!!!!!!!!!!!!!!!!!! 1, 1
Elapsed cycles: Some(1004)
Runtime (s): 0.03172101











dfmodel_compute_time:[80.0], total:80
dfmodel_memory_time:[0.0], total:0
dfmodel_network_time:[25.6], total:25.6
dfmodel_time:[80.0], total:80
dam_compute_time:[0.0], total:0
dam_memory_time:[0.0], total:0
dam_network_time:[25.7024], total:25.7024
dam_time:[25.7024], total:25.7024
